buildscript {
    repositories {
        mavenCentral()
        maven {
            name = "forge"
            url = "http://files.minecraftforge.net/maven"
        }
        maven {
            name = "sonatype"
            url = "https://oss.sonatype.org/content/repositories/snapshots/"
        }
    }
    dependencies {
        classpath 'net.minecraftforge.gradle:ForgeGradle:1.2-SNAPSHOT'
    }
}

apply plugin: 'forge'

version = "1.7.10 - 1.0"  // Important line - used to label version number of your mod. Preferred to put the version of Minecraft your mod is for, followed by the version of the mod. THIS IS THE SECOND PART OF THE NAME OF THE JAR FOR YOUR MOD.
group= "com.static7s.relearning_to_mod" // http://maven.apache.org/guides/mini/guide-naming-conventions.html        Identifies the mod and who created it... not really sure what this is good for, but its important.
archivesBaseName = "relearning_to_mod"  //THIS IS THE FIRST PART OF THE NAME OF THE JAR FILE OF YOUR MOD.

minecraft {
    version = "1.7.10-10.13.4.1448-1.7.10"  // The version of Minecraft followed by the version of Minecraft Forge you are working with. Tells the build script which version of Forge to use. Changing this will change which version of Forge the build script uses, and will automatically download the proper version if you don't already have it.
    runDir = "eclipse"  // The directory where your decompiled stuff goes into
}

dependencies {      // <---- VERY USEFUL! - USED TO ADD APIS AND OTHER MODS TO THE DEV ENVIRONMENT
    // you may put jars on which you depend on in ./libs
    // or you may define them like so..
    //compile "some.group:artifact:version:classifier"
    //compile "some.group:artifact:version"
      
    // real examples
    //compile 'com.mod-buildcraft:buildcraft:6.0.8:dev'  // adds buildcraft to the dev env
    //compile 'com.googlecode.efficient-java-matrix-library:ejml:0.24' // adds ejml to the dev env

    // for more info...
    // http://www.gradle.org/docs/current/userguide/artifact_dependencies_tutorial.html
    // http://www.gradle.org/docs/current/userguide/dependency_management.html

}

processResources
{
    // this will ensure that this task is redone when the versions change.
    inputs.property "version", project.version
    inputs.property "mcversion", project.minecraft.version

    // replace stuff in mcmod.info, nothing else
    from(sourceSets.main.resources.srcDirs) {
        include 'mcmod.info'
                
        // replace version and mcversion
        expand 'version':project.version, 'mcversion':project.minecraft.version
    }
        
    // copy everything else, thats not the mcmod.info
    from(sourceSets.main.resources.srcDirs) {
        exclude 'mcmod.info'
    }
}
